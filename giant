async function nameAndClass () {
    submitBut.addEventListener("click", () => {
        if (input.value.length > 0) {
            config.charName  = input.value;
            introDiv.style.display = "none";
            classDiv.style.display = "block";
            buttonDiv.style.display = "flex";
        }
    })
    return new Promise((resolve) => {
        huntBut.addEventListener("click", () => {
            config.classChoice = config.hunterClassName;
            classDiv.style.display = "none";
            resolve(new Hunter(config.charName))
        })
        sorcBut.addEventListener("click", () => {
            config.classChoice = config.sorcererClassName;
            classDiv.style.display = "none";
            resolve(new Sorcerer(config.charName))
        })
        swrdBut.addEventListener("click", () => {
            config.classChoice = config.swordpersonClassName;
            classDiv.style.display = "none";
            resolve(new Swordperson(config.charName))
        })
    })
};

async function intro () {
    const texts = [intText1, intText2, intText3, intText35, intText4, intText5] //add text lines to array
    let current=1;
    intNextBut.addEventListener("click",() => {        
        texts.forEach(txt => txt.style.display = 'none'); //cycle through and show as button is pressed ending on name submission
        texts[current].style.display = "block";
        if ((current + 1) % texts.length == 0) {
            name.style.display = "inline";
            submit.style.display = "inline";
            intNextBut.style.display = "none";

        } else if ((current + 1) % texts.length != 0) {
            current = (current + 1) % texts.length;
        }
    })
    character = await nameAndClass();
    return new Promise((resolve) => { //submit name and pick class
        resolve(character)
    })
    
}

async function gameLoop() {
    let character = await intro();
    await setup();
    await battle();
    console.log("right spot?")
 
    console.log("you lost!")
}

gameLoop();

